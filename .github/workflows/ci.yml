name: CI

on:
  push:
    branches:
      - main

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Installing ESLint dependencies
        run:  npm install --save-dev eslint-plugin-react @typescript-eslint/parser @typescript-eslint/eslint-plugin
      - name: Installing Stylelint dependencies
        run:  npm install --save-dev stylelint-order stylelint-config-idiomatic-order
      - name: ESLint check
        run: npx eslint --ext js,jsx,ts,tsx src
      - name: Stylelint check
        run: npx stylelint src/**/*.css
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Installing pnpm
        run: npm install -g pnpm
      - name: Installing dependencies
        run:  pnpm i --frozen-lockfile
      - name: Running unit tests
        run: pnpm test
  build-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Installing pnpm
        run: npm install -g pnpm
      - name: Installing library dependencies
        run: pnpm i --frozen-lockfile
      - name: Installing docs dependencies
        run: cd docs && pnpm i --frozen-lockfile
      - name: Installing examples dependencies
        run: cd examples && pnpm i --frozen-lockfile
      - name: Building library
        run: pnpm build
      - name: Building docs
        run: pnpm build:docs
      - name: Building examples
        run: pnpm build:examples
  examples-deploy:
    runs-on: ubuntu-latest
    needs:
      - linting
      - unit-tests
      - build-check
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
      - uses: actions/checkout@v2
        with:
          token: ${{secrets.PERSONAL_ACCESS_TOKEN}}
      - name: Git user configuration
        run: |
          git config --global user.email "cergmin@gmail.com"
          git config --global user.name "Sergey Minakov"
      - name: Checkout to examples branch
        run: git checkout --orphan examples
      - name: Installing pnpm
        run: npm install -g pnpm
      - name: Installing library dependencies
        run:  pnpm i --frozen-lockfile
      - name: Installing examples dependencies
        run:  cd examples && pnpm i --frozen-lockfile
      - name: Building library
        run:  pnpm build
      - name: Building examples
        run:  pnpm build:examples
      - name: Stage examples build
        run: git --work-tree examples/build add --all
      - name: Commit examples build
        run: git --work-tree examples/build commit -m "Deploy"
      - name: Push to examples branch
        run: git push origin HEAD:examples --force
  library-deploy:
    runs-on: ubuntu-latest
    needs:
      - linting
      - unit-tests
      - build-check
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
      - uses: actions/checkout@v2
        with:
          token: ${{secrets.PERSONAL_ACCESS_TOKEN}}
      - name: Git user configuration
        run: |
          git config --global user.email "cergmin@gmail.com"
          git config --global user.name "Sergey Minakov"
      - name: Checkout to lib branch
        run: git checkout --orphan lib
      - name: Installing pnpm
        run: npm install -g pnpm
      - name: Installing library dependencies
        run:  pnpm i --frozen-lockfile
      - name: Building library
        run:  pnpm build
      - name: Replace .gitignore with .npmignore
        run: |
          rm .gitignore
          mv .npmignore .gitignore
      - name: Stage library build
        run: |
          git reset
          git add .
      - name: Commit library build
        run: git commit -m "Deploy"
      - name: Push to lib branch
        run: git push origin HEAD:lib -f